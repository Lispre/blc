(->input output.
(->I.
(->true false.
(->if.
(->null.
(->pair.
(->first.
(->rest.
(->empty.
(->Y.
(->append.
(->parse.
(->eval.
(->env.

(first (rest (rest (rest (rest (first(parse input)))))))

(pair (parse input) (pair output null)))
(Y
  ->eval input environment.
  (input (->head1 tail1.(tail1 ->head2 tail2.
    (if head1
      (if head2
        (eval tail1 (rest environment))
        (first environment))
      (if head2
        (eval (eval tail2 environment) environment)
        (->environment.(eval tail2 environment)))))))
))
(Y
  ->parse input.
  (input (->head1 tail1.(tail1 ->head2 tail2.
    (if head1
      (if head2
        (->var.(pair (pair head1 (first var)) (rest var)) (parse tail1))
        (pair (pair head1 (pair head2 null)) tail2))
      (if head2
        (->fun.
          (->arg.
            (pair (pair head1 (pair head2 (append (first fun) (first arg)))) (rest fun))
            (parse (rest fun)))
          (parse tail2))
        (->term.(pair (pair head1 (pair head2 (first term))) (rest term)) (parse tail2))
        )))))
))
(Y ->append list other.(if (empty list) other (pair (first list) (append (rest list) other)))))
->self.(->arg.(self (arg arg)) ->arg.(self (arg arg))))
->list.(list ->first->rest->bool.false true))
->pair.(pair false))
->pair.(pair true))
->first rest. ->select.(select first rest))
false)
->condition consequent alternative.(condition consequent alternative))
->first second.first ->first second.second)
->self.self)
10 110)

01 10 10
