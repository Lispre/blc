(quote ())
(quote (+ (* 2 x) 3))
(first (quote (1 2 3)))
(rest (quote (1 2 3)))
(cons 1 (quote (2 3)))
(cons 1 (quote ()))
(cons 1 (cons 2 (cons 3 (quote ()))))
(define x 0)
x
(define y (quote (1 2 3)))
y
(cons x y)
((lambda z z) 3)
((lambda z (quote (1 2 3))) 2)
(((lambda y (lambda x (cons x (cons y (quote()))))) 2) 3)
(define f (lambda x x))
(f 3)
((true 1) 2)
((false 1) 2)
(eq (quote 1) (quote 1))
(eq (quote 1) (quote 2))
(((not true) 1) 2)
(((not false) 1) 2)
